Hatirlayacagimiz gibi yeni baslayan bir thread yeni bir Stack meydana getirecektir. Thread’i baslatmak icin start() metodunu kullaniriz.

t.start();
t, java.lang.Thread sinifi tipinde referans degiskendir.
Thread’in baslamasi yeni bir stack olusturur.
Thread “new” durumundan “runnable” durumuna gecer.
Runnable duruuna gectikte sonra run() metodunu calistirilabilir.
Unutmayalim, Thread ‘i baslatabiliriz(start) , Runnable’i baslatmak(start) kavrami soz konusu degildir. Bu nedenle start metodu java.lang.
Thread sinifinin ornegi/instance uzerinden(Thread tipinde referans degisken araciligiyla ) olur.



Hatirlayacagimiz gibi java.lang.Thread sinifi java.lang.Runnable arabirimini uygulamaktadir.
Runnable arabirimi run() metoduna sahiptir. Burada run() metodunu override ettik ve yapilmasi gereken isi burada belirttik.

start() metodu yeni bir thread ve stack baslatir daha sonrasinda run metodunu cagirir.
run() metodunu direkt cagirmak yeni bir thread ve stack olusturmaz fakat legal bir durumdur. Birden fazla run metodunu cagirabiliriz.
run() metodunu cagirmak diger metotlari cagirmak gibidir, dolayisiyla diger metotlarda oldugu gibi ayni mevcut/current stack icerisinde calisir/yasar.
Unutmayalim instance metotlar Stack’te yasarlar.
start() metodunu bir referans degisken uzerinden cagirdiktan sonra , tekrar start metodunu cagirdigimizda java.lang.IllegalThreadStateException hatasi aliriz.

